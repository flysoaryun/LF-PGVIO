%YAML:1.0

#common parameters
imu_topic: "/mavros/imu/data"
#image_topic: "/cam0/image_raw"
image_topic: "/mindvision/mindvision/left/image_mono"
output_path: "/home/wt/slam/0118/src/VINS-Mono/output/"

#camera calibration 
model_type: scaramuzza
camera_name: pal
image_width: 1280
image_height: 960
# poly_parameters:
#    p0: -2.463506e+02 
#    p1: 0.000000e+00 
#    p2: 1.872966e-03 
#    p3: -2.284953e-06 
#    p4: 5.082365e-09 
# inv_poly_parameters:
#    p0: 376.943961
#    p1: 246.867309 
#    p2: 17.112154 
#    p3: 20.656636 
#    p4: 19.342198 
#    p5: 6.661639 
#    p6: 0.101614 
#    p7: 5.635293 
#    p8: 4.316109 
#    p9: -1.987921 
#    p10: -1.951446 
#    p11: 0.989571 
#    p12: 1.198098 
#    p13: 0.280377 
#    p14: 0.0
#    p15: 0.0
#    p16: 0.0
#    p17: 0.0
#    p18: 0.0 
#    p19: 0.0 
# affine_parameters:
#    ac: 1.000045 
#    ad: 0.000016 
#    ae: -0.000022
#    cx: 645.104835
#    cy: 485.978236

poly_parameters:
   p0: -2.445239e+02
   p1: 0.000000e+00
   p2: 1.748610e-03
   p3: -1.757770e-06
   p4: 4.475965e-09 
inv_poly_parameters:
   p0: 376.845565
   p1: 246.746504
   p2: 19.035187
   p3: 23.840497
   p4: 18.991943
   p5: 6.066253
   p6: 1.560387
   p7: 5.854280
   p8: 3.458320
   p9: -1.995166
   p10: -1.509264
   p11: 1.089614
   p12: 1.340245
   p13: 0.255323 
   p14: 0.0
   p15: 0.0
   p16: 0.0
   p17: 0.0
   p18: 0.0 
   p19: 0.0 
affine_parameters:
   ac: 1.000000
   ad: 0.000000
   ae: 0.000000
   cx: 645.107791
   cy: 486.025172

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
#   data: [0.0148655429818, -0.999880929698, 0.00414029679422,
#           0.999557249008, 0.0149672133247, 0.025715529948, 
#           -0.0257744366974, 0.00375618835797, 0.999660727178]
   # data: [-0.999949700263649,  0.007760552460550 , 0.006330159910637,
   #         -0.007778710351654 ,-0.999965377760029 , -0.002848281184658,
   #         0.006307846959537, -0.002897386539466, 0.999975815700400]
   data: [-1.0, 0.0, 0.0,
           0.0,-1.0, 0.0, 
           0.0, 0.0, 1.0]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
#   data: [-0.0216401454975,-0.064676986768, 0.00981073058949]
   data: [0.0,0.0,0.03]

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#added by wz
center_x: 640.991301
center_y: 490.937512
max_r: 500
min_r: 160

# max_r: 500
# min_r: 381



# max_r: 500
# min_r: 344

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.02          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.04         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.001      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/shaozu/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.008                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
